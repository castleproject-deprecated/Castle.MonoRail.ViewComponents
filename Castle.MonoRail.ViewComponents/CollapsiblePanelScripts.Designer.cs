//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Castle.MonoRail.ViewComponents {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class CollapsiblePanelScripts {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal CollapsiblePanelScripts() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Castle.MonoRail.ViewComponents.CollapsiblePanelScripts", typeof(CollapsiblePanelScripts).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function expandCollapse(userOpts)
        ///{
        ///	var opts = jQuery.extend({}, CollapseConponentDefaults, userOpts);
        ///	jQuery(&apos;#&apos;+opts.controlName).slideToggle(opts.effectDuration * 1000);
        ///	if (opts.togglerName)
        ///	{
        ///	    var toggler = jQuery(&apos;#&apos;+opts.togglerName);
        ///	    if (opts.showImg)
        ///		    if (toggler.attr(opts.toggleAttr) == opts.collapseLinkText)
        ///		        toggler.attr({alt:opts.expandLinkText, src: opts.hideImg});
        ///		    else  toggler.attr({alt:opts.collapseLinkText, src: opts.showImg});
        ///	    else
        ///	toggle [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string jquery {
            get {
                return ResourceManager.GetString("jquery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function expandCollapse(userOpts)
        ///{
        ///	var opts = Object.extend(Object.extend({},CollapseConponentDefaults), userOpts);
        ///    new Effect.toggle(opts.controlName, opts.effect, {duration:opts.effectDuration});
        ///    var toggler = document.getElementById(opts.togglerName);
        ///	    if (opts.showImg)
        ///            if (toggler.alt == opts.collapseLinkText)
        ///            {
        ///                toggler.alt = opts.expandLinkText; 
        ///                toggler.src = opts.hideImg;
        ///            }
        ///            else if (toggler.alt == [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string prototype {
            get {
                return ResourceManager.GetString("prototype", resourceCulture);
            }
        }
    }
}
